[{"id":"490330e2.59c6f","type":"multipart-decoder","z":"8d859dff.8224a8","name":"HTTPS multipart","ret":"txt","url":"https://smstestbed.nist.gov/vds/sample?interval=0&heartbeat=1000","tls":"","delay":0,"maximum":1000000,"blockSize":1,"x":338.5,"y":592,"wires":[["a66aa623.4b872"]]},{"id":"d8b8c83.7775038","type":"debug","z":"8d859dff.8224a8","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1074,"y":620,"wires":[]},{"id":"1eb65b65.9179c5","type":"inject","z":"8d859dff.8224a8","name":"Repeat inject","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":108,"y":589,"wires":[["490330e2.59c6f"]]},{"id":"a66aa623.4b872","type":"xml","z":"8d859dff.8224a8","name":"","property":"payload","attr":"","chr":"","x":539,"y":596,"wires":[["d0a78b3e.4e9ae8"]]},{"id":"d0a78b3e.4e9ae8","type":"function","z":"8d859dff.8224a8","name":"","func":"var COMPONENTS = ['Position','RotaryVelocity','Angle'];\n\nvar streams = msg.payload.MTConnectStreams.Streams;\n\n    var device_streams = streams[0].DeviceStream;\n    \n    for(q=0;q<device_streams.length;q++){\n        \n        //node.send(\"EW\");\n        var component_stream = device_streams[q].ComponentStream;\n        \n        for(r=0;r<component_stream.length;r++){\n            \n\n                var samples = {};\n                var value = {};\n                var name = {};\n                var timestamp = {};\n                var dataItemID = {};\n                \n                //samples = component_stream[r].Samples[0].Position[0].$.dataItemId;\n                \n                for(i=0;i<COMPONENTS.length;i++){\n                    \n                    if(COMPONENTS[i] == 'Position'){\n                        try{\n                            value = component_stream[r].Samples[0].Position[0]._;\n                            name = component_stream[r].Samples[0].Position[0].$.name;\n                            timestamp = component_stream[r].Samples[0].Position[0].$.timestamp;\n                            dataItemID = component_stream[r].Samples[0].Position[0].$.dataItemId;\n                            \n                            send_packet(timestamp,dataItemID,value);\n                        }\n                        catch(error){\n                            \n                        }\n                    }\n                    if(COMPONENTS[i] == 'RotaryVelocity'){\n                        try{\n                            value = component_stream[r].Samples[0].RotaryVelocity[0]._;\n                            name = component_stream[r].Samples[0].RotaryVelocity[0].$.name;\n                            timestamp = component_stream[r].Samples[0].RotaryVelocity[0].$.timestamp;\n                            dataItemID = component_stream[r].Samples[0].RotaryVelocity[0].$.dataItemId;\n                            \n                            send_packet(timestamp,dataItemID,value);\n                        }\n                        catch(error){\n                            \n                        }\n                    }\n                    if(COMPONENTS[i] == 'Angle'){\n                        try{\n                            value = component_stream[r].Samples[0].Angle[0]._;\n                            name = component_stream[r].Samples[0].Angle[0].$.name;\n                            timestamp = component_stream[r].Samples[0].Angle[0].$.timestamp;\n                            dataItemID = component_stream[r].Samples[0].Angle[0].$.dataItemId;\n                            \n                            send_packet(timestamp,dataItemID,value);\n                        }\n                        catch(error){\n                            \n                        }\n                    }\n                }\n            \n        }\n        \n    }\n\nfunction send_packet(timestamp,dataItemID,value){\n    var packet = {\n        \"dateTime\": timestamp,  // Note: UTC time.\n        \"assetId\": 'OKUMA_NEW',\n        \"dataItemId\": dataItemID,\n        \"value\": value,\n        \"itemInstanceId\": 'Part1',\n        \"operatorId\": 'Operator1'\n    };\n    node.send({payload:packet});\n}","outputs":1,"noerr":0,"x":772,"y":608,"wires":[["d8b8c83.7775038","642dcb1.93c6534"]]},{"id":"642dcb1.93c6534","type":"mqtt out","z":"8d859dff.8224a8","name":"MQTT Send","topic":"Asset/OKUMA_NEW/AXES","qos":"","retain":"","broker":"2a042885.06bc3","x":1078,"y":733,"wires":[]},{"id":"2a042885.06bc3","type":"mqtt-broker","z":"","name":"MQTT Output","broker":"mb13.iotfm.org","port":"1883","clientid":"CNC10","usetls":false,"compatmode":true,"keepalive":"120","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""}]